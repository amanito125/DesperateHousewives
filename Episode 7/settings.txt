Показани са означенията на типовете сложност на алгоритъм, посочете съответстващата му сложност, като изберете от падащия списък срещу всяко от означенията:

O(n3)        [кубична]

O(log(N))  [логаритмична]

O(N)         [линейна]

O(2n)        [експоненциална]

О(n2)        [квадратична]

O(1)          [константна]

O(N!)        [експоненциална]




Дефинирайте понятието сложност на алгоритъм, като попълните липсващите думи в текста.

Сложност на алгоритъм е [груба оценка на броя стъпки], които алгоритъмът ще направи в зависимост от [размера на входните данни]. Това е груба оценка, която се интересува от [порядъка на броя стъпки], а не от [точния им брой].


Стойностите в масива трябва да са сортирани. [Двоично търсене]

Работи във времева сложност O(log n). [Двоично търсене]

Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. [Двоично търсене]

Работи във времева сложност O(log(log n)). [Линейно търсене] 

Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. [Двоично търсене]

Стойностите в масива не е задължително да са сортирани. [Линейно търсене]

Започва винаги от началото на масива. [Линейно търсене]

Ако ключът съвпада със средния елемент, върнете средното местоположение. [Двоично търсене]

Започва търсенето от средата на масива. [Двоично търсене]


Стойностите в масива трябва да са сортирани и равномерно разпределени. [Интерполационно търсене]

Работи във времева сложност O(log n). [Двоично търсене]

Ако ключът е по-малък от средния елемент, тогава ключът може да лежи само в левия подмасив. [Отнася се и за двата алгоритъма]

Работи във времева сложност O(log(log n)). [Интерполационно търсене] 

Ако ключът е по-голям от средния елемент, тогава ключът може да лежи само в десния подмасив. [Отнася се и за двата алгоритъма]

Може да се оцени позицията на стойността на ключа в масива,като се вземат предвид най-малкият и най-големият елемент в масива и дължината на масива. [Интерполационно търсене]

Оценява средната позиция за масива и сравнява този елемент с желания ключ. [Интерполационно търсене]

Ако ключът съвпада със средния елемент, върнете средното местоположение. [Отнася се и за двата алгоритъма]